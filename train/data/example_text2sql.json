[
    {
      "db_id": "database",
      "instruction": "CREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- which states border arizona\nSELECT",
      "input": "",
      "output": "SELECT border FROM border_info WHERE state_name = 'arizona'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the flights from ONTARIO to MEMPHIS\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ONTARIO' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'MEMPHIS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Name the course worth 9 credits .\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT name, number FROM course WHERE credits = 9 AND department = 'EECS'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- can you show me what fares are available from OAKLAND to DALLAS on 12 16 one way only\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT fare.fare_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day AS DATE_DAY_0, date_day AS DATE_DAY_1, days AS DAYS_0, days AS DAYS_1, fare, fare_basis, flight, flight_fare WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DALLAS' AND DATE_DAY_1.day_number = 16 AND DATE_DAY_1.month_number = 12 AND DATE_DAY_1.year = 1991 AND DAYS_1.day_name = DATE_DAY_1.day_name AND flight.flight_days = DAYS_1.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'OAKLAND' AND DATE_DAY_0.day_number = 16 AND DATE_DAY_0.month_number = 12 AND DATE_DAY_0.year = 1991 AND DAYS_0.day_name = DATE_DAY_0.day_name AND fare_basis.basis_days = DAYS_0.days_code AND fare.fare_basis_code = fare_basis.fare_basis_code AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND fare.round_trip_required = 'NO'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- do any of the CO flights from BOSTON to SAN FRANCISCO stop in DENVER\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, city AS CITY_0, city AS CITY_1, city AS CITY_2, flight, flight_stop WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'DENVER' AND flight_stop.stop_airport = AIRPORT_SERVICE_2.airport_code AND flight.flight_id = flight_stop.flight_id AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.airline_code = 'CO'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- list all the airlines that fly into MKE\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT airline.airline_code FROM airline, airport, flight WHERE airport.airport_code = 'MKE' AND flight.airline_code = airline.airline_code AND flight.to_airport = airport.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- 483 is how large ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT num_enrolled FROM course WHERE department = 'EECS' AND number = 483",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- This Spring-Summer , how many upper-level 14 -credit SPACE classes are being offered ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT course.course_id) FROM course, course_offering, program_course, semester WHERE course.course_id = course_offering.course_id AND course.credits = 14 AND course.department = 'SPACE' AND program_course.category LIKE '%ULCS%' AND program_course.course_id = course.course_id AND semester.semester = 'Spring-Summer' AND semester.semester_id = course_offering.semester AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE location (\nrestaurant_id,\nhouse_number,\nstreet_name,\ncity_name\n)\n\nCREATE TABLE restaurant (\nid,\nname,\nfood_type,\ncity_name,\nrating\n)\n\nCREATE TABLE geographic (\ncity_name,\ncounty,\nregion\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- give me a good arabic restaurant in mountain view ?\nSELECT",
      "input": "",
      "output": "SELECT location.house_number, restaurant.name FROM location, restaurant WHERE location.city_name = 'mountain view' AND restaurant.food_type = 'arabic' AND restaurant.id = location.restaurant_id AND restaurant.rating > 2.5",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- FRENCH 656 is going to be taught by what professor this Spring-Summer ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT instructor.name FROM course INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN offering_instructor ON offering_instructor.offering_id = course_offering.offering_id INNER JOIN instructor ON offering_instructor.instructor_id = instructor.instructor_id INNER JOIN semester ON semester.semester_id = course_offering.semester WHERE course.department = 'FRENCH' AND course.number = 656 AND semester.semester = 'Spring-Summer' AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- papers from ACL 2014\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT paper.paperid FROM paper, venue WHERE paper.year = 2014 AND venue.venueid = paper.venueid AND venue.venuename = 'ACL'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what river is the longest one in the united states\nSELECT",
      "input": "",
      "output": "SELECT river_name FROM river WHERE length = (SELECT MAX(RIVERalias1.length) FROM river AS RIVERalias1)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What past classes has Dr. Nicole Appleberry taught ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number FROM course, course_offering, instructor, offering_instructor WHERE course_offering.semester < (SELECT SEMESTERalias0.semester_id FROM semester AS SEMESTERalias0 WHERE SEMESTERalias0.semester = 'WN' AND SEMESTERalias0.year = 2016) AND course.course_id = course_offering.course_id AND instructor.name LIKE '%Nicole Appleberry%' AND offering_instructor.instructor_id = instructor.instructor_id AND offering_instructor.offering_id = course_offering.offering_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- give me flights from ATLANTA to BALTIMORE\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ATLANTA' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BALTIMORE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- all flights PHOENIX to SFO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport, airport_service, city, flight WHERE airport.airport_code = 'SFO' AND city.city_code = airport_service.city_code AND city.city_name = 'PHOENIX' AND flight.from_airport = airport_service.airport_code AND flight.to_airport = airport.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- how many flights does EA have from BOSTON to ATLANTA\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT flight.flight_id) FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND flight.airline_code = 'EA'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the population of boulder\nSELECT",
      "input": "",
      "output": "SELECT population FROM city WHERE city_name = 'boulder'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i'm looking for a flight that goes from ONTARIO to WESTCHESTER COUNTY and stops in CHICAGO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, city AS CITY_0, city AS CITY_1, city AS CITY_2, flight, flight_stop WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'WESTCHESTER COUNTY' AND CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'CHICAGO' AND flight_stop.stop_airport = AIRPORT_SERVICE_2.airport_code AND flight.flight_id = flight_stop.flight_id AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ONTARIO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the classes of service on TW\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT class_of_service.booking_class FROM class_of_service, fare, fare_basis, flight, flight_fare WHERE fare_basis.booking_class = class_of_service.booking_class AND fare.fare_basis_code = fare_basis.fare_basis_code AND flight_fare.fare_id = fare.fare_id AND flight.airline_code = 'TW' AND flight.flight_id = flight_fare.flight_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the price of a one way fare from ATLANTA to BOSTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT fare.fare_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, fare, flight, flight_fare WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ATLANTA' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND fare.round_trip_required = 'NO' AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- In Winter or Fall of 2011 , what theory courses are offered ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, semester.semester FROM course INNER JOIN area ON course.course_id = area.course_id INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN semester ON semester.semester_id = course_offering.semester WHERE area.area LIKE '%theory%' AND semester.semester IN ('WN', 'FA') AND semester.year = 2011",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- does YX have any flights from MONTREAL to NASHVILLE\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT airline.airline_code FROM airline, airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE ((flight.airline_code = 'YX') AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'NASHVILLE' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'MONTREAL' AND flight.airline_code = airline.airline_code AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- name the longest river in us\nSELECT",
      "input": "",
      "output": "SELECT river_name FROM river WHERE length = (SELECT MAX(RIVERalias1.length) FROM river AS RIVERalias1)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the population density of the smallest state\nSELECT",
      "input": "",
      "output": "SELECT density FROM state WHERE area = (SELECT MIN(STATEalias1.area) FROM state AS STATEalias1)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me the DL flights from SAN FRANCISCO to BOSTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.to_airport = AIRPORT_SERVICE_0.airport_code AND flight.from_airport = AIRPORT_SERVICE_1.airport_code) AND flight.airline_code = 'DL'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- saturday flights from LAS VEGAS to MONTREAL\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'MONTREAL' AND date_day.day_number = 26 AND date_day.month_number = 7 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'LAS VEGAS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- could you show me all the flights from OAKLAND to SALT LAKE CITY\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'OAKLAND' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SALT LAKE CITY' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- On Friday , is there class for SAC 305 ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course_offering.friday FROM course INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN semester ON semester.semester_id = course_offering.semester WHERE course.department = 'SAC' AND course.number = 305 AND semester.semester = 'WN' AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- In the Fall or Winter what courses are they offering to meet the MDE requirement ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, semester.semester FROM course INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN semester ON semester.semester_id = course_offering.semester INNER JOIN program_course ON program_course.course_id = course_offering.course_id WHERE program_course.category LIKE '%MDE%' AND semester.semester IN ('FA', 'WN') AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Do you know if SPANISH 299 is being offered next semester ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(*) > 0 FROM course, course_offering, semester WHERE course.course_id = course_offering.course_id AND course.department = 'SPANISH' AND course.number = 299 AND semester.semester = 'FA' AND semester.semester_id = course_offering.semester AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- give me the cities in virginia\nSELECT",
      "input": "",
      "output": "SELECT city_name FROM city WHERE state_name = 'virginia'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i would like a COACH class seat on a flight leaving DENVER arriving ATLANTA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, fare, fare_basis, flight, flight_fare WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND fare_basis.class_type = 'COACH' AND fare.fare_basis_code = fare_basis.fare_basis_code AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- flights from COLUMBUS to MILWAUKEE\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'COLUMBUS' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'MILWAUKEE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What courses will be available during the upcoming 6 semesters ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.name, course.number, semester.semester, semester.year FROM course, course_offering, semester WHERE ((semester.semester = 'FA' AND semester.year = 2016) OR (semester.semester = 'FA' AND semester.year = 2017) OR (semester.semester = 'FA' AND semester.year = 2018) OR (semester.semester = 'WN' AND semester.year = 2017) OR (semester.semester = 'WN' AND semester.year = 2018) OR (semester.semester = 'WN' AND semester.year = 2019)) AND course.course_id = course_offering.course_id AND course.department = 'EECS' AND semester.semester_id = course_offering.semester ORDER BY semester.year, semester.semester",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the biggest city in the usa\nSELECT",
      "input": "",
      "output": "SELECT city_name FROM city WHERE population = (SELECT MAX(CITYalias1.population) FROM city AS CITYalias1)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me the flights from PHILADELPHIA to ATLANTA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PHILADELPHIA' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Which class most easily fulfills the MDE requirement ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, program_course.workload, program_course.workload FROM course, program_course WHERE program_course.category LIKE '%MDE%' AND program_course.course_id = course.course_id AND program_course.workload = (SELECT MIN(PROGRAM_COURSEalias1.workload) FROM program_course AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.category LIKE '%MDE%')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- all flights from BOSTON to WASHINGTON on 11 11\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'WASHINGTON' AND date_day.day_number = 11 AND date_day.month_number = 11 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- list all flights from BALTIMORE to PHILADELPHIA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BALTIMORE' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PHILADELPHIA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights leave PITTSBURGH after 1700 on thursday and arrive in LOS ANGELES\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((date_day.day_number = 24 AND date_day.month_number = 5 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.departure_time > 1700 AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'LOS ANGELES' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PITTSBURGH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- how many people live in the capital of texas\nSELECT",
      "input": "",
      "output": "SELECT population FROM city WHERE city_name = (SELECT STATEalias0.capital FROM state AS STATEalias0 WHERE STATEalias0.state_name = 'texas')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- tell me the flights from BALTIMORE to DALLAS\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BALTIMORE' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DALLAS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Are there upper-level classes for which 574 is not required ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT department, name, number FROM course WHERE (description LIKE '%topic0%' OR name LIKE '%topic0%') AND department = 'EECS'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights leave BALTIMORE for BOSTON after 600 o'clock on friday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((date_day.day_number = 25 AND date_day.month_number = 6 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.departure_time > 600 AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BALTIMORE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- find the earliest flight from BOSTON to OAKLAND that serves BREAKFAST\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight, food_service WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'OAKLAND' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code AND food_service.meal_code = flight.meal_code AND food_service.meal_description = 'BREAKFAST') AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.departure_time = (SELECT MIN(FLIGHTalias1.departure_time) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, flight AS FLIGHTalias1, food_service AS FOOD_SERVICEalias1 WHERE (CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'OAKLAND' AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code AND FOOD_SERVICEalias1.meal_code = FLIGHTalias1.meal_code AND FOOD_SERVICEalias1.meal_description = 'BREAKFAST') AND CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'BOSTON' AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show flights from DALLAS to SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DALLAS' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- list the flights and departure times for flights leaving DALLAS FORT WORTH for BOSTON after 1800\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.departure_time, flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, city AS CITY_0, city AS CITY_1, city AS CITY_2, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DALLAS FORT WORTH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND (CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'BOSTON' AND flight.departure_time > 1800 AND flight.to_airport = AIRPORT_SERVICE_2.airport_code)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- how many major cities are in texas\nSELECT",
      "input": "",
      "output": "SELECT COUNT(city_name) FROM city WHERE population > 150000 AND state_name = 'texas'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- is ground transportation available in ST. LOUIS\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT ground_service.transport_type FROM city, ground_service WHERE city.city_name = 'ST. LOUIS' AND ground_service.city_code = city.city_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the combined area of all 50 states\nSELECT",
      "input": "",
      "output": "SELECT SUM(area) FROM state",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- list airports\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT airport_code FROM airport",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Is computing infrastructure the basis of any of my previous courses ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number FROM course INNER JOIN student_record ON student_record.course_id = course.course_id INNER JOIN area ON student_record.course_id = area.course_id WHERE area.area LIKE '%computing infrastructure%' AND student_record.student_id = 1",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the cities in states through which the mississippi runs\nSELECT",
      "input": "",
      "output": "SELECT city_name FROM city WHERE state_name IN (SELECT RIVERalias0.traverse FROM river AS RIVERalias0 WHERE RIVERalias0.river_name = 'mississippi')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE location (\nrestaurant_id,\nhouse_number,\nstreet_name,\ncity_name\n)\n\nCREATE TABLE geographic (\ncity_name,\ncounty,\nregion\n)\n\nCREATE TABLE restaurant (\nid,\nname,\nfood_type,\ncity_name,\nrating\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the best restaurant in the bay area for american food ?\nSELECT",
      "input": "",
      "output": "SELECT location.house_number, restaurant.name FROM geographic, location, restaurant WHERE geographic.region = 'bay area' AND restaurant.city_name = geographic.city_name AND restaurant.food_type = 'american' AND restaurant.id = location.restaurant_id AND restaurant.rating = (SELECT MAX(RESTAURANTalias1.rating) FROM geographic AS GEOGRAPHICalias1, restaurant AS RESTAURANTalias1 WHERE GEOGRAPHICalias1.region = 'bay area' AND RESTAURANTalias1.city_name = GEOGRAPHICalias1.city_name AND RESTAURANTalias1.food_type = 'american')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show flights from PHILADELPHIA to BOSTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PHILADELPHIA' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- In 2010 are there computational science courses offered in Winter or Fall ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, semester.semester FROM course INNER JOIN area ON course.course_id = area.course_id INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN semester ON semester.semester_id = course_offering.semester WHERE area.area LIKE '%computational science%' AND semester.semester IN ('WN', 'FA') AND semester.year = 2010",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What papers were published at CVPR in 2016 about Class consistent multi-modal fusion with binary features applied to RGB-D Object Dataset ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT paper.paperid FROM dataset, paper, paperdataset, venue WHERE dataset.datasetname = 'RGB-D Object Dataset' AND paperdataset.datasetid = dataset.datasetid AND paper.paperid = paperdataset.paperid AND paper.title = 'Class consistent multi-modal fusion with binary features' AND paper.year = 2016 AND venue.venueid = paper.venueid AND venue.venuename = 'CVPR'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me nonstop flights from ST. PETERSBURG to TORONTO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ST. PETERSBURG' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'TORONTO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND flight.stops = 0",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what 's the cheapest flight from DENVER to PITTSBURGH\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, fare, flight, flight_fare WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PITTSBURGH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND fare.one_direction_cost = (SELECT MIN(FAREalias1.one_direction_cost) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, fare AS FAREalias1, flight AS FLIGHTalias1, flight_fare AS FLIGHT_FAREalias1 WHERE CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'DENVER' AND CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'PITTSBURGH' AND FLIGHT_FAREalias1.fare_id = FAREalias1.fare_id AND FLIGHTalias1.flight_id = FLIGHT_FAREalias1.flight_id AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code) AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me all flights from PHILADELPHIA to DENVER on sunday which leave PHILADELPHIA after 1200\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((date_day.day_number = 27 AND date_day.month_number = 8 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.departure_time > 1200 AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DENVER' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PHILADELPHIA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE keyword (\nkeyword,\nkid\n)\n\nCREATE TABLE journal (\nhomepage,\njid,\nname\n)\n\nCREATE TABLE domain_publication (\ndid,\npid\n)\n\nCREATE TABLE conference (\ncid,\nhomepage,\nname\n)\n\nCREATE TABLE author (\naid,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE writes (\naid,\npid\n)\n\nCREATE TABLE domain_keyword (\ndid,\nkid\n)\n\nCREATE TABLE publication (\nabstract,\ncid,\ncitation_num,\njid,\npid,\nreference_num,\ntitle,\nyear\n)\n\nCREATE TABLE domain_author (\naid,\ndid\n)\n\nCREATE TABLE domain (\ndid,\nname\n)\n\nCREATE TABLE organization (\ncontinent,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE domain_conference (\ncid,\ndid\n)\n\nCREATE TABLE domain_journal (\ndid,\njid\n)\n\nCREATE TABLE publication_keyword (\nkid,\npid\n)\n\nCREATE TABLE cite (\ncited,\nciting\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- return me the number of papers in VLDB after 2000 in ' University of Michigan ' .\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT (publication.title)) FROM author, journal, organization, publication, writes WHERE journal.name = 'VLDB' AND organization.name = 'University of Michigan' AND organization.oid = author.oid AND publication.jid = journal.jid AND publication.year > 2000 AND writes.aid = author.aid AND writes.pid = publication.pid",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the flights from TACOMA to SAN JOSE also on tuesday the eighteenth of may\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN JOSE' AND date_day.day_number = 22 AND date_day.month_number = 3 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'TACOMA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is SA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT day_name FROM days WHERE days_code = 'SA'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights are available wednesday afternoon from DENVER to SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND date_day.day_number = 23 AND date_day.month_number = 4 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.departure_time BETWEEN 1200 AND 1800",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE organization (\ncontinent,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE conference (\ncid,\nhomepage,\nname\n)\n\nCREATE TABLE domain_publication (\ndid,\npid\n)\n\nCREATE TABLE author (\naid,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE domain_conference (\ncid,\ndid\n)\n\nCREATE TABLE keyword (\nkeyword,\nkid\n)\n\nCREATE TABLE journal (\nhomepage,\njid,\nname\n)\n\nCREATE TABLE publication (\nabstract,\ncid,\ncitation_num,\njid,\npid,\nreference_num,\ntitle,\nyear\n)\n\nCREATE TABLE domain (\ndid,\nname\n)\n\nCREATE TABLE writes (\naid,\npid\n)\n\nCREATE TABLE cite (\ncited,\nciting\n)\n\nCREATE TABLE domain_author (\naid,\ndid\n)\n\nCREATE TABLE publication_keyword (\nkid,\npid\n)\n\nCREATE TABLE domain_keyword (\ndid,\nkid\n)\n\nCREATE TABLE domain_journal (\ndid,\njid\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- return me the number of papers by ' H. V. Jagadish ' .\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT (publication.title)) FROM author, publication, writes WHERE author.name = 'H. V. Jagadish' AND writes.aid = author.aid AND writes.pid = publication.pid",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- During the Spring and Summer term , how many 100 -level classes are being offered ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT course.course_id, semester.semester) FROM course, course_offering, semester WHERE course.course_id = course_offering.course_id AND course.department = 'department0' AND course.number BETWEEN 100 AND 100 + 100 AND semester.semester IN ('SP', 'SS', 'SU') AND semester.semester_id = course_offering.semester AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what about a RENTAL CAR in DENVER\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT ground_service.transport_type FROM city, ground_service WHERE city.city_name = 'DENVER' AND ground_service.city_code = city.city_code AND ground_service.transport_type = 'RENTAL CAR'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Can you list the courses that are worth 12 credits ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT name, number FROM course WHERE credits = 12 AND department = 'EECS'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me all flights from SAN FRANCISCO to NEW YORK nonstop\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'SAN FRANCISCO' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'NEW YORK' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND flight.stops = 0",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- which airline is KW\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT airline_code FROM airline WHERE airline_code = 'KW'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Are there any professors who have given a B to a student minoring in RCSSCI ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT instructor.name FROM instructor INNER JOIN offering_instructor ON offering_instructor.instructor_id = instructor.instructor_id INNER JOIN student_record ON student_record.offering_id = offering_instructor.offering_id INNER JOIN student ON student.student_id = student_record.student_id WHERE (student_record.grade LIKE '%B%' OR student_record.grade LIKE '%B%') AND student.minor = 'RCSSCI'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- give me flights from PITTSBURGH to BALTIMORE\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PITTSBURGH' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BALTIMORE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- List the journals published in March , 2011\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT journalid FROM paper WHERE year = 2011 GROUP BY journalid",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Name the classes that are available this Fall that would count toward a CS major .\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number FROM course, course_offering, program, program_course, semester WHERE program_course.course_id = course.course_id AND program_course.course_id = course.course_id AND program.name LIKE '%CS%' AND program.program_id = program_course.program_id AND semester.semester = 'Fall' AND semester.semester_id = course_offering.semester AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me the most expensive one way flight from DETROIT to WESTCHESTER COUNTY\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT FLIGHT_0.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, airport_service AS AIRPORT_SERVICE_3, city AS CITY_0, city AS CITY_1, city AS CITY_2, city AS CITY_3, fare, flight AS FLIGHT_0, flight AS FLIGHT_1, flight_fare AS FLIGHT_FARE, flight_fare AS FLIGHT_FARE_1 WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'WESTCHESTER COUNTY' AND CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'DETROIT' AND CITY_3.city_code = AIRPORT_SERVICE_3.city_code AND CITY_3.city_name = 'WESTCHESTER COUNTY' AND fare.one_direction_cost = (SELECT MAX(FAREalias1.one_direction_cost) FROM airport_service AS AIRPORT_SERVICEalias4, airport_service AS AIRPORT_SERVICEalias5, city AS CITYalias4, city AS CITYalias5, fare AS FAREalias1, flight AS FLIGHTalias2, flight_fare AS FLIGHT_FAREalias2 WHERE CITYalias4.city_code = AIRPORT_SERVICEalias4.city_code AND CITYalias4.city_name = 'DETROIT' AND CITYalias5.city_code = AIRPORT_SERVICEalias5.city_code AND CITYalias5.city_name = 'WESTCHESTER COUNTY' AND FAREalias1.round_trip_required = 'NO' AND FLIGHT_FAREalias2.fare_id = FAREalias1.fare_id AND FLIGHTalias2.flight_id = FLIGHT_FAREalias2.flight_id AND FLIGHTalias2.from_airport = AIRPORT_SERVICEalias4.airport_code AND FLIGHTalias2.to_airport = AIRPORT_SERVICEalias5.airport_code) AND fare.round_trip_required = 'NO' AND flight_fare.fare_id = fare.fare_id AND FLIGHT_FARE_1.fare_id = fare.fare_id AND FLIGHT_0.flight_id = flight_fare.flight_id AND FLIGHT_0.to_airport = AIRPORT_SERVICE_1.airport_code AND FLIGHT_1.flight_id = FLIGHT_FARE_1.flight_id AND FLIGHT_1.from_airport = AIRPORT_SERVICE_2.airport_code AND FLIGHT_1.to_airport = AIRPORT_SERVICE_3.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DETROIT' AND FLIGHT_0.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- How many credits do I get for 417 ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT credits FROM course WHERE department = 'EECS' AND number = 417",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE author (\naid,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE domain (\ndid,\nname\n)\n\nCREATE TABLE publication_keyword (\nkid,\npid\n)\n\nCREATE TABLE keyword (\nkeyword,\nkid\n)\n\nCREATE TABLE writes (\naid,\npid\n)\n\nCREATE TABLE domain_author (\naid,\ndid\n)\n\nCREATE TABLE domain_conference (\ncid,\ndid\n)\n\nCREATE TABLE domain_keyword (\ndid,\nkid\n)\n\nCREATE TABLE organization (\ncontinent,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE domain_publication (\ndid,\npid\n)\n\nCREATE TABLE conference (\ncid,\nhomepage,\nname\n)\n\nCREATE TABLE journal (\nhomepage,\njid,\nname\n)\n\nCREATE TABLE publication (\nabstract,\ncid,\ncitation_num,\njid,\npid,\nreference_num,\ntitle,\nyear\n)\n\nCREATE TABLE domain_journal (\ndid,\njid\n)\n\nCREATE TABLE cite (\ncited,\nciting\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- return me the area of the VLDB conference .\nSELECT",
      "input": "",
      "output": "SELECT domain.name FROM conference, domain, domain_conference WHERE conference.name = 'VLDB' AND domain_conference.cid = conference.cid AND domain.did = domain_conference.did",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Is LHC 688 offered in Fall 2000 ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(*) > 0 FROM course, course_offering, semester WHERE course.course_id = course_offering.course_id AND course.department = 'LHC' AND course.number = 688 AND semester.semester = 'Fall' AND semester.semester_id = course_offering.semester AND semester.year = 2000",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- li dong 's paper about semantic parsing\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT author.authorid, paper.paperid FROM author, keyphrase, paper, paperkeyphrase, writes WHERE author.authorname = 'li dong' AND keyphrase.keyphrasename = 'semantic parsing' AND paperkeyphrase.keyphraseid = keyphrase.keyphraseid AND paper.paperid = paperkeyphrase.paperid AND writes.authorid = author.authorid AND writes.paperid = paper.paperid",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Are there PEDDENT courses that are 8 credit ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT name, number FROM course WHERE department = 'PEDDENT' AND credits = 8",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What authors wrote papers about Semantic Spaces in 2016 ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT writes.authorid FROM author, keyphrase, paper, paperkeyphrase, writes WHERE keyphrase.keyphrasename = 'Semantic Spaces' AND paperkeyphrase.keyphraseid = keyphrase.keyphraseid AND paper.paperid = paperkeyphrase.paperid AND paper.year = 2016 AND writes.authorid = author.authorid AND writes.paperid = paper.paperid",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What time is Geoffrey Bankowski next teaching 463 ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT semester.semester, semester.year FROM course, course_offering, instructor, offering_instructor, semester WHERE course.course_id = course_offering.course_id AND course.number = 463 AND course_offering.semester = semester.semester_id AND instructor.name LIKE '%Geoffrey Bankowski%' AND offering_instructor.instructor_id = instructor.instructor_id AND offering_instructor.offering_id = course_offering.offering_id AND semester.semester_id > (SELECT SEMESTERalias1.semester_id FROM semester AS SEMESTERalias1 WHERE SEMESTERalias1.semester = 'WN' AND SEMESTERalias1.year = 2016) ORDER BY semester.semester_id LIMIT 1",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what 's the lowest round trip fare from BWI to any city\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT fare.fare_id FROM airport, fare, flight, flight_fare WHERE airport.airport_code = 'BWI' AND fare.round_trip_cost = (SELECT MIN(FAREalias1.round_trip_cost) FROM airport AS AIRPORTalias1, fare AS FAREalias1, flight AS FLIGHTalias1, flight_fare AS FLIGHT_FAREalias1 WHERE AIRPORTalias1.airport_code = 'BWI' AND FLIGHT_FAREalias1.fare_id = FAREalias1.fare_id AND FLIGHTalias1.flight_id = FLIGHT_FAREalias1.flight_id AND FLIGHTalias1.from_airport = AIRPORTalias1.airport_code) AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id AND flight.from_airport = airport.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- yes i would like to find what flights are available from ATLANTA to BOSTON on the morning of 7 7\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (((flight.departure_time BETWEEN 0 AND 1200) AND date_day.day_number = 7 AND date_day.month_number = 7 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ATLANTA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE domain_keyword (\ndid,\nkid\n)\n\nCREATE TABLE domain_journal (\ndid,\njid\n)\n\nCREATE TABLE author (\naid,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE domain_conference (\ncid,\ndid\n)\n\nCREATE TABLE publication_keyword (\nkid,\npid\n)\n\nCREATE TABLE domain (\ndid,\nname\n)\n\nCREATE TABLE writes (\naid,\npid\n)\n\nCREATE TABLE keyword (\nkeyword,\nkid\n)\n\nCREATE TABLE domain_publication (\ndid,\npid\n)\n\nCREATE TABLE conference (\ncid,\nhomepage,\nname\n)\n\nCREATE TABLE journal (\nhomepage,\njid,\nname\n)\n\nCREATE TABLE publication (\nabstract,\ncid,\ncitation_num,\njid,\npid,\nreference_num,\ntitle,\nyear\n)\n\nCREATE TABLE cite (\ncited,\nciting\n)\n\nCREATE TABLE organization (\ncontinent,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE domain_author (\naid,\ndid\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- return me the keywords, which have been contained by more than 10 papers of ' H. V. Jagadish ' .\nSELECT",
      "input": "",
      "output": "SELECT keyword.keyword FROM author, keyword, publication, publication_keyword, writes WHERE author.name = 'H. V. Jagadish' AND publication_keyword.kid = keyword.kid AND publication.pid = publication_keyword.pid AND writes.aid = author.aid AND writes.pid = publication.pid GROUP BY keyword.keyword HAVING COUNT(DISTINCT (publication.title)) > 10",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE domain_journal (\ndid,\njid\n)\n\nCREATE TABLE publication (\nabstract,\ncid,\ncitation_num,\njid,\npid,\nreference_num,\ntitle,\nyear\n)\n\nCREATE TABLE domain_conference (\ncid,\ndid\n)\n\nCREATE TABLE writes (\naid,\npid\n)\n\nCREATE TABLE organization (\ncontinent,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE cite (\ncited,\nciting\n)\n\nCREATE TABLE domain_publication (\ndid,\npid\n)\n\nCREATE TABLE keyword (\nkeyword,\nkid\n)\n\nCREATE TABLE domain_author (\naid,\ndid\n)\n\nCREATE TABLE conference (\ncid,\nhomepage,\nname\n)\n\nCREATE TABLE domain (\ndid,\nname\n)\n\nCREATE TABLE journal (\nhomepage,\njid,\nname\n)\n\nCREATE TABLE domain_keyword (\ndid,\nkid\n)\n\nCREATE TABLE publication_keyword (\nkid,\npid\n)\n\nCREATE TABLE author (\naid,\nhomepage,\nname,\noid\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- return me the keywords, which have been contained by more than 100 papers in VLDB conference .\nSELECT",
      "input": "",
      "output": "SELECT keyword.keyword FROM conference, keyword, publication, publication_keyword WHERE conference.name = 'VLDB' AND publication_keyword.kid = keyword.kid AND publication.cid = conference.cid AND publication.pid = publication_keyword.pid GROUP BY keyword.keyword HAVING COUNT(DISTINCT (publication.title)) > 100",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE producer (\npid,\ngender,\nname,\nnationality,\nbirth_city,\nbirth_year\n)\n\nCREATE TABLE keyword (\nid,\nkeyword\n)\n\nCREATE TABLE tv_series (\nsid,\ntitle,\nrelease_year,\nnum_of_seasons,\nnum_of_episodes,\ntitle_aka,\nbudget\n)\n\nCREATE TABLE cast (\nid,\nmsid,\naid,\nrole\n)\n\nCREATE TABLE writer (\nwid,\ngender,\nname,\nnationality,\nbirth_city,\nbirth_year\n)\n\nCREATE TABLE tags (\nid,\nmsid,\nkid\n)\n\nCREATE TABLE directed_by (\nid,\nmsid,\ndid\n)\n\nCREATE TABLE director (\ndid,\ngender,\nname,\nnationality,\nbirth_city,\nbirth_year\n)\n\nCREATE TABLE company (\nid,\nname,\ncountry_code\n)\n\nCREATE TABLE genre (\ngid,\ngenre\n)\n\nCREATE TABLE made_by (\nid,\nmsid,\npid\n)\n\nCREATE TABLE actor (\naid,\ngender,\nname,\nnationality,\nbirth_city,\nbirth_year\n)\n\nCREATE TABLE written_by (\nid,\nmsid,\nwid\n)\n\nCREATE TABLE copyright (\nid,\nmsid,\ncid\n)\n\nCREATE TABLE classification (\nid,\nmsid,\ngid\n)\n\nCREATE TABLE movie (\nmid,\ntitle,\nrelease_year,\ntitle_aka,\nbudget\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What is the number of movies that ' Brad Pitt ' acts in per year ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT (movie.title)), movie.release_year FROM actor, cast, movie WHERE actor.name = 'Brad Pitt' AND cast.aid = actor.aid AND movie.mid = cast.msid GROUP BY movie.release_year",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me the flights from SAN FRANCISCO to DALLAS on CO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DALLAS' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.to_airport = AIRPORT_SERVICE_0.airport_code AND flight.from_airport = AIRPORT_SERVICE_1.airport_code) AND flight.airline_code = 'CO'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- are there any flights available from BALTIMORE to DALLAS monday afternoon\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DALLAS' AND date_day.day_number = 21 AND date_day.month_number = 2 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BALTIMORE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.departure_time BETWEEN 1200 AND 1800",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what states border the state with the most cities\nSELECT",
      "input": "",
      "output": "SELECT border FROM border_info WHERE state_name IN (SELECT DERIVED_TABLEalias0.state_name FROM (SELECT CITYalias0.state_name, COUNT(1) AS DERIVED_FIELDalias0 FROM city AS CITYalias0 GROUP BY CITYalias0.state_name) AS DERIVED_TABLEalias0 WHERE DERIVED_TABLEalias0.DERIVED_FIELDalias0 = (SELECT MAX(DERIVED_TABLEalias1.DERIVED_FIELDalias1) FROM (SELECT COUNT(1) AS DERIVED_FIELDalias1 FROM city AS CITYalias1 GROUP BY CITYalias1.state_name) AS DERIVED_TABLEalias1))",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- in ATLANTA i would like information on ground transportation\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT ground_service.transport_type FROM city, ground_service WHERE city.city_name = 'ATLANTA' AND ground_service.city_code = city.city_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me flights from PHILADELPHIA to OAKLAND on friday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'OAKLAND' AND date_day.day_number = 25 AND date_day.month_number = 6 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PHILADELPHIA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- which airlines have flights between CHARLOTTE and NEWARK\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT airline.airline_code FROM airline, airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'CHARLOTTE' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'NEWARK' AND flight.airline_code = airline.airline_code AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the flights between PITTSBURGH and SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PITTSBURGH' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights are there from BALTIMORE to SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BALTIMORE' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights do you have leaving BOSTON going to SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- MEDADM 571 in Winter 2013 , how many professors teach these ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT instructor.instructor_id) FROM course, course_offering, instructor, offering_instructor, semester WHERE course.course_id = course_offering.course_id AND course.department = 'MEDADM' AND course.number = 571 AND offering_instructor.instructor_id = instructor.instructor_id AND offering_instructor.offering_id = course_offering.offering_id AND semester.semester = 'Winter' AND semester.semester_id = course_offering.semester AND semester.year = 2013",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Is DHYGRACK 685 required to take the course DHYGRACK 689 ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(*) > 0 FROM course AS COURSE_0, course AS COURSE_1, course_prerequisite WHERE COURSE_0.course_id = course_prerequisite.pre_course_id AND COURSE_0.department = 'DHYGRACK' AND COURSE_0.number = 685 AND COURSE_1.course_id = course_prerequisite.course_id AND COURSE_1.department = 'DHYGRACK' AND COURSE_1.number = 689",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights are there from BOSTON to DENVER on monday morning\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DENVER' AND date_day.day_number = 21 AND date_day.month_number = 2 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.departure_time BETWEEN 0 AND 1200",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the ground transportation available in BOSTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT ground_service.transport_type FROM city, ground_service WHERE city.city_name = 'BOSTON' AND ground_service.city_code = city.city_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Which class could be the easiest to fulfill the Other requirement ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, program_course.workload, program_course.workload FROM course, program_course WHERE program_course.category LIKE '%Other%' AND program_course.course_id = course.course_id AND program_course.workload = (SELECT MIN(PROGRAM_COURSEalias1.workload) FROM program_course AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.category LIKE '%Other%')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show flights between DENVER and SAN FRANCISCO for 9 17\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND date_day.day_number = 17 AND date_day.month_number = 9 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what airlines fly between SAN FRANCISCO and DENVER\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT airline.airline_code FROM airline, airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'SAN FRANCISCO' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DENVER' AND flight.airline_code = airline.airline_code AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- how many states border colorado and border new mexico\nSELECT",
      "input": "",
      "output": "SELECT COUNT(border) FROM border_info WHERE border IN (SELECT BORDER_INFOalias1.border FROM border_info AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.state_name = 'new mexico') AND state_name = 'colorado'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the last flight of the day to leave BALTIMORE for BOSTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BALTIMORE' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND flight.departure_time = (SELECT MAX(FLIGHTalias1.departure_time) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, flight AS FLIGHTalias1 WHERE CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'BALTIMORE' AND CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'BOSTON' AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- DALLAS to SAN FRANCISCO leaving after 1600 in the afternoon please\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.departure_time > 1600 AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DALLAS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what 's the ground transportation from OAKLAND to SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT ground_service.transport_type FROM city AS CITY_0, city AS CITY_1, ground_service WHERE CITY_0.city_name = 'OAKLAND' AND CITY_1.city_name = 'SAN FRANCISCO' AND ground_service.city_code = CITY_0.city_code AND ground_service.city_code = CITY_1.city_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me the CO flights leaving CHICAGO early saturday morning\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service, city, date_day, days, flight WHERE (((flight.airline_code = 'CO') AND date_day.day_number = 26 AND date_day.month_number = 7 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code) AND (flight.departure_time BETWEEN 0 AND 800)) AND city.city_code = airport_service.city_code AND city.city_name = 'CHICAGO' AND flight.from_airport = airport_service.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i would like the 1 flight from DALLAS into HOUSTON on 3 1 and the last flight from HOUSTON back to DALLAS on 3 1\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (((date_day.day_number = 1 AND date_day.month_number = 3 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.departure_time = (SELECT MAX(FLIGHTalias2.departure_time) FROM airport_service AS AIRPORT_SERVICEalias4, airport_service AS AIRPORT_SERVICEalias5, city AS CITYalias4, city AS CITYalias5, date_day AS DATE_DAYalias2, days AS DAYSalias2, flight AS FLIGHTalias2 WHERE (CITYalias5.city_code = AIRPORT_SERVICEalias5.city_code AND CITYalias5.city_name = 'DALLAS' AND DATE_DAYalias2.day_number = 1 AND DATE_DAYalias2.month_number = 3 AND DATE_DAYalias2.year = 1991 AND DAYSalias2.day_name = DATE_DAYalias2.day_name AND FLIGHTalias2.flight_days = DAYSalias2.days_code AND FLIGHTalias2.to_airport = AIRPORT_SERVICEalias5.airport_code) AND CITYalias4.city_code = AIRPORT_SERVICEalias4.city_code AND CITYalias4.city_name = 'HOUSTON' AND FLIGHTalias2.from_airport = AIRPORT_SERVICEalias4.airport_code) AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DALLAS' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'HOUSTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) OR (((date_day.day_number = 1 AND date_day.month_number = 3 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.departure_time = (SELECT MIN(FLIGHTalias1.departure_time) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, date_day AS DATE_DAYalias1, days AS DAYSalias1, flight AS FLIGHTalias1 WHERE (CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'HOUSTON' AND DATE_DAYalias1.day_number = 1 AND DATE_DAYalias1.month_number = 3 AND DATE_DAYalias1.year = 1991 AND DAYSalias1.day_name = DATE_DAYalias1.day_name AND FLIGHTalias1.flight_days = DAYSalias1.days_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code) AND CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'DALLAS' AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code) AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'HOUSTON' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DALLAS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights go from BOSTON to ATLANTA next tuesday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND date_day.day_number = 22 AND date_day.month_number = 3 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me all direct flights from DALLAS FORT WORTH to either SAN FRANCISCO or OAKLAND\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, airport_service AS AIRPORT_SERVICE_3, city AS CITY_0, city AS CITY_1, city AS CITY_2, city AS CITY_3, flight WHERE ((CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DALLAS FORT WORTH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND ((flight.to_airport = AIRPORT_SERVICE_2.airport_code AND CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'SAN FRANCISCO') OR (flight.to_airport = AIRPORT_SERVICE_3.airport_code AND CITY_3.city_code = AIRPORT_SERVICE_3.city_code AND CITY_3.city_name = 'OAKLAND'))) AND flight.connections = 0",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Is EDUC 831 a required course for my major ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(*) > 0 FROM course, program_course WHERE course.department = 'EDUC' AND course.number = 831 AND program_course.category LIKE '%Core%' AND program_course.course_id = course.course_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- get me a FIRST class flight on AA to SAN FRANCISCO on tuesday next week\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service, city, date_day AS DATE_DAY_0, date_day AS DATE_DAY_1, days AS DAYS_0, days AS DAYS_1, fare, fare_basis AS FARE_BASIS_0, fare_basis AS FARE_BASIS_1, flight, flight_fare WHERE ((DATE_DAY_0.day_number = 22 AND DATE_DAY_0.month_number = 3 AND DATE_DAY_0.year = 1991 AND DATE_DAY_1.day_number = 22 AND DATE_DAY_1.month_number = 3 AND DATE_DAY_1.year = 1991 AND DAYS_0.day_name = DATE_DAY_0.day_name AND DAYS_1.day_name = DATE_DAY_1.day_name AND FARE_BASIS_0.class_type = 'FIRST' AND FARE_BASIS_1.basis_days = DAYS_1.days_code AND fare.fare_basis_code = FARE_BASIS_0.fare_basis_code AND fare.fare_basis_code = FARE_BASIS_1.fare_basis_code AND flight_fare.fare_id = fare.fare_id AND flight.flight_days = DAYS_0.days_code AND flight.flight_id = flight_fare.flight_id) AND city.city_code = airport_service.city_code AND city.city_name = 'SAN FRANCISCO' AND flight.to_airport = airport_service.airport_code) AND flight.airline_code = 'AA'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What are the 6 -credit courses offered ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT name, number FROM course WHERE credits = 6 AND department = 'EECS'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me all flights from ATLANTA to SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ATLANTA' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- flights from ATLANTA please\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service, city, flight WHERE city.city_code = airport_service.city_code AND city.city_name = 'ATLANTA' AND flight.from_airport = airport_service.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Do any upper-level classes not have 575 as a prerequisite ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT department, name, number FROM course WHERE (description LIKE '%topic0%' OR name LIKE '%topic0%') AND department = 'EECS'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what DL leaves BOSTON for ATLANTA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ATLANTA' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND flight.to_airport = AIRPORT_SERVICE_0.airport_code AND flight.from_airport = AIRPORT_SERVICE_1.airport_code) AND flight.airline_code = 'DL'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Is it mandatory for graduation for me to take KINESLGY 995 ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(*) > 0 FROM course, program_course WHERE course.department = 'KINESLGY' AND course.number = 995 AND program_course.category LIKE '%Core%' AND program_course.course_id = course.course_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i'd like to know if you have any flights from DENVER to PHILADELPHIA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PHILADELPHIA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights do you have from ONTARIO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service, city, flight WHERE city.city_code = airport_service.city_code AND city.city_name = 'ONTARIO' AND flight.from_airport = airport_service.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me CO flights from CHICAGO to SEATTLE on saturday morning\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SEATTLE' AND date_day.day_number = 26 AND date_day.month_number = 7 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'CHICAGO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.airline_code = 'CO') AND flight.departure_time BETWEEN 0 AND 1200",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- In the morning , what times are there for the FRENCH 490 course ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course_offering.end_time, course_offering.start_time, semester.semester, semester.year FROM course, course_offering, semester WHERE course_offering.start_time < '12:00:00' AND course_offering.start_time >= '08:00:00' AND course.course_id = course_offering.course_id AND course.department = 'FRENCH' AND course.number = 490 AND semester.semester = 'semester0' AND semester.semester_id = course_offering.semester AND semester.year = year0",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- How many papers did Luke Campbell write last year ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT COUNT(paper.paperid) FROM author, paper, writes WHERE author.authorname = 'Luke Campbell' AND paper.year = YEAR(CURDATE()) - 1 AND writes.authorid = author.authorid AND writes.paperid = paper.paperid",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- list all flights departing from SEATTLE\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service, city, flight WHERE city.city_code = airport_service.city_code AND city.city_name = 'SEATTLE' AND flight.from_airport = airport_service.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE business (\nbid,\nbusiness_id,\nname,\nfull_address,\ncity,\nlatitude,\nlongitude,\nreview_count,\nis_open,\nrating,\nstate\n)\n\nCREATE TABLE category (\nid,\nbusiness_id,\ncategory_name\n)\n\nCREATE TABLE neighborhood (\nid,\nbusiness_id,\nneighborhood_name\n)\n\nCREATE TABLE user (\nuid,\nuser_id,\nname\n)\n\nCREATE TABLE checkin (\ncid,\nbusiness_id,\ncount,\nday\n)\n\nCREATE TABLE tip (\ntip_id,\nbusiness_id,\ntext,\nuser_id,\nlikes,\nyear,\nmonth\n)\n\nCREATE TABLE review (\nrid,\nbusiness_id,\nuser_id,\nrating,\ntext,\nyear,\nmonth\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Find users whose average review rating is below 3\nSELECT",
      "input": "",
      "output": "SELECT user.name FROM review, user WHERE user.user_id = review.user_id GROUP BY user.name HAVING AVG(review.rating) < 3",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- which state has the highest point\nSELECT",
      "input": "",
      "output": "SELECT state_name FROM highlow WHERE highest_elevation = (SELECT MAX(HIGHLOWalias1.highest_elevation) FROM highlow AS HIGHLOWalias1)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What do you think is the easiest class I can take to fulfill the Other requirement ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, program_course.workload, program_course.workload FROM course, program_course WHERE program_course.category LIKE '%Other%' AND program_course.course_id = course.course_id AND program_course.workload = (SELECT MIN(PROGRAM_COURSEalias1.workload) FROM program_course AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.category LIKE '%Other%')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i would like an evening flight from PITTSBURGH to LOS ANGELES on 6 3\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'LOS ANGELES' AND date_day.day_number = 3 AND date_day.month_number = 6 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PITTSBURGH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.departure_time BETWEEN 1800 AND 2200",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what airlines are there\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT airline.airline_code FROM airline, airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, city AS CITY_0, city AS CITY_1, city AS CITY_2, flight, flight_stop WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'DENVER' AND flight_stop.stop_airport = AIRPORT_SERVICE_2.airport_code AND flight.flight_id = flight_stop.flight_id AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND flight.airline_code = airline.airline_code AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- please list the flights from TORONTO to WASHINGTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'TORONTO' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'WASHINGTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- how many states are in the united states\nSELECT",
      "input": "",
      "output": "SELECT COUNT(state_name) FROM state",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE field (\nfieldid\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- number of papers in sigir conference\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT COUNT(paper.paperid) FROM paper, venue WHERE venue.venueid = paper.venueid AND venue.venuename = 'sigir'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me the flights from CLEVELAND to MEMPHIS\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'CLEVELAND' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'MEMPHIS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i want the flights from DENVER to PITTSBURGH\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PITTSBURGH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- papers from 2014\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT paperid FROM paper WHERE year = 2014",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me flights from OAKLAND to DALLAS on sunday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DALLAS' AND date_day.day_number = 27 AND date_day.month_number = 8 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'OAKLAND' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Which Fall or Winter classes can I take in order to meet my Other requirement ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT COURSEalias0.department, COURSEalias0.name, COURSEalias0.number, SEMESTERalias0.semester FROM (SELECT course_id FROM student_record WHERE earn_credit = 'Y' AND student_id = 1) AS DERIVED_TABLEalias0, course AS COURSEalias0, course_offering AS COURSE_OFFERINGalias0, program_course AS PROGRAM_COURSEalias0, semester AS SEMESTERalias0 WHERE COURSEalias0.course_id = COURSE_OFFERINGalias0.course_id AND NOT COURSEalias0.course_id IN (DERIVED_TABLEalias0.course_id) AND NOT COURSEalias0.course_id IN (SELECT DISTINCT COURSE_PREREQUISITEalias0.course_id FROM course_prerequisite AS COURSE_PREREQUISITEalias0 WHERE NOT COURSE_PREREQUISITEalias0.pre_course_id IN (DERIVED_TABLEalias0.course_id)) AND COURSEalias0.department = 'department0' AND PROGRAM_COURSEalias0.category LIKE '%Other%' AND PROGRAM_COURSEalias0.course_id = COURSE_OFFERINGalias0.course_id AND SEMESTERalias0.semester IN ('FA', 'WN') AND SEMESTERalias0.semester_id = COURSE_OFFERINGalias0.semester AND SEMESTERalias0.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE user (\nuid,\nuser_id,\nname\n)\n\nCREATE TABLE tip (\ntip_id,\nbusiness_id,\ntext,\nuser_id,\nlikes,\nyear,\nmonth\n)\n\nCREATE TABLE neighborhood (\nid,\nbusiness_id,\nneighborhood_name\n)\n\nCREATE TABLE checkin (\ncid,\nbusiness_id,\ncount,\nday\n)\n\nCREATE TABLE business (\nbid,\nbusiness_id,\nname,\nfull_address,\ncity,\nlatitude,\nlongitude,\nreview_count,\nis_open,\nrating,\nstate\n)\n\nCREATE TABLE category (\nid,\nbusiness_id,\ncategory_name\n)\n\nCREATE TABLE review (\nrid,\nbusiness_id,\nuser_id,\nrating,\ntext,\nyear,\nmonth\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Find the average number of checkins in restaurant ' Barrio Cafe ' per day\nSELECT",
      "input": "",
      "output": "SELECT AVG(checkin.count), checkin.day FROM business, category, checkin WHERE business.name = 'Barrio Cafe' AND category.business_id = business.business_id AND category.category_name = 'restaurant' AND checkin.business_id = business.business_id GROUP BY checkin.day",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the latest flight from SALT LAKE CITY to PHOENIX\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'SALT LAKE CITY' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PHOENIX' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND flight.departure_time = (SELECT MAX(FLIGHTalias1.departure_time) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, flight AS FLIGHTalias1 WHERE CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'SALT LAKE CITY' AND CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'PHOENIX' AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- return from MIAMI to NEW YORK on FF on SATURDAY\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, days, flight WHERE ((CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'MIAMI' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'NEW YORK' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND days.day_name = 'SATURDAY' AND flight.flight_days = days.days_code) AND flight.airline_code = 'FF'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What are the requirements to get a CS-LSA degree ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT program_requirement.additional_req, program_requirement.category, program_requirement.min_credit, program.name FROM program, program_requirement WHERE program.name LIKE '%CS-LSA%' AND program.program_id = program_requirement.program_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- please list all flights between BOSTON and ATLANTA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i'd like to know the earliest flight from BOSTON to SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND flight.departure_time = (SELECT MIN(FLIGHTalias1.departure_time) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, flight AS FLIGHTalias1 WHERE CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'BOSTON' AND CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'SAN FRANCISCO' AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me the flights from OAKLAND to DENVER\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'OAKLAND' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DENVER' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights leave CHARLOTTE NORTH CAROLINA and arrive in PHOENIX ARIZONA on monday before 1600\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight, state AS STATE_0, state AS STATE_1 WHERE ((date_day.day_number = 21 AND date_day.month_number = 2 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.arrival_time < 1600 AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PHOENIX' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code AND STATE_1.state_code = CITY_1.state_code AND STATE_1.state_name = 'ARIZONA') AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'CHARLOTTE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND STATE_0.state_code = CITY_0.state_code AND STATE_0.state_name = 'NORTH CAROLINA'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- ground transportation please in the city of BOS between airport and downtown\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT ground_service.transport_type FROM airport, airport_service, city AS CITY_0, city AS CITY_1, ground_service WHERE airport.airport_code = airport_service.airport_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = airport_service.city_code AND CITY_1.city_name = 'BOSTON' AND ground_service.airport_code = airport.airport_code AND ground_service.city_code = CITY_0.city_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- How often does the class YIDDISH 531 meet ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course_offering.friday, course_offering.monday, course_offering.saturday, course_offering.sunday, course_offering.thursday, course_offering.tuesday, course_offering.wednesday FROM course INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN semester ON semester.semester_id = course_offering.semester WHERE course.department = 'YIDDISH' AND course.number = 531 AND semester.semester = 'WN' AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- In Spring and Summer how many 300 -level classes are being offered ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT course.course_id, semester.semester) FROM course, course_offering, semester WHERE course.course_id = course_offering.course_id AND course.department = 'department0' AND course.number BETWEEN 300 AND 300 + 100 AND semester.semester IN ('SP', 'SS', 'SU') AND semester.semester_id = course_offering.semester AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what flights from MEMPHIS to MIAMI on wednesday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'MIAMI' AND date_day.day_number = 23 AND date_day.month_number = 4 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'MEMPHIS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- list all nonstop flights from LOS ANGELES to PITTSBURGH before 1700 on tuesday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (((date_day.day_number = 22 AND date_day.month_number = 3 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.departure_time < 1700 AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PITTSBURGH' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'LOS ANGELES' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.stops = 0",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Out of EECS 388 and EECS 301 , which one is more effortless ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.number FROM course INNER JOIN program_course ON program_course.course_id = course.course_id WHERE (course.number = 388 OR course.number = 301) AND program_course.workload = (SELECT MIN(PROGRAM_COURSEalias1.workload) FROM program_course AS PROGRAM_COURSEalias1 INNER JOIN course AS COURSEalias1 ON PROGRAM_COURSEalias1.course_id = COURSEalias1.course_id WHERE (COURSEalias1.number = 388 OR COURSEalias1.number = 301) AND COURSEalias1.department = 'EECS')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Does Dennis Capozza teach the class ENVIRON 377 ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(*) > 0 FROM course, course_offering, instructor, offering_instructor WHERE course.course_id = course_offering.course_id AND course.department = 'ENVIRON' AND course.number = 377 AND instructor.name LIKE '%Dennis Capozza%' AND offering_instructor.instructor_id = instructor.instructor_id AND offering_instructor.offering_id = course_offering.offering_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i need a ticket from NASHVILLE to SEATTLE\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'NASHVILLE' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SEATTLE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- the most expensive flight between BOSTON and PHILADELPHIA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT FLIGHT_0.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, airport_service AS AIRPORT_SERVICE_3, city AS CITY_0, city AS CITY_1, city AS CITY_2, city AS CITY_3, fare, flight AS FLIGHT_0, flight AS FLIGHT_1, flight_fare AS FLIGHT_FARE, flight_fare AS FLIGHT_FARE_1 WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PHILADELPHIA' AND CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'BOSTON' AND CITY_3.city_code = AIRPORT_SERVICE_3.city_code AND CITY_3.city_name = 'PHILADELPHIA' AND fare.one_direction_cost = (SELECT MAX(FAREalias1.one_direction_cost) FROM airport_service AS AIRPORT_SERVICEalias4, airport_service AS AIRPORT_SERVICEalias5, city AS CITYalias4, city AS CITYalias5, fare AS FAREalias1, flight AS FLIGHTalias2, flight_fare AS FLIGHT_FAREalias2 WHERE CITYalias4.city_code = AIRPORT_SERVICEalias4.city_code AND CITYalias4.city_name = 'BOSTON' AND CITYalias5.city_code = AIRPORT_SERVICEalias5.city_code AND CITYalias5.city_name = 'PHILADELPHIA' AND FLIGHT_FAREalias2.fare_id = FAREalias1.fare_id AND FLIGHTalias2.flight_id = FLIGHT_FAREalias2.flight_id AND FLIGHTalias2.from_airport = AIRPORT_SERVICEalias4.airport_code AND FLIGHTalias2.to_airport = AIRPORT_SERVICEalias5.airport_code) AND flight_fare.fare_id = fare.fare_id AND FLIGHT_FARE_1.fare_id = fare.fare_id AND FLIGHT_0.flight_id = flight_fare.flight_id AND FLIGHT_0.to_airport = AIRPORT_SERVICE_1.airport_code AND FLIGHT_1.flight_id = FLIGHT_FARE_1.flight_id AND FLIGHT_1.from_airport = AIRPORT_SERVICE_2.airport_code AND FLIGHT_1.to_airport = AIRPORT_SERVICE_3.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND FLIGHT_0.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i'd like to make a round trip from LOS ANGELES to NEWARK by way of CHARLOTTE\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, airport_service AS AIRPORT_SERVICE_3, city AS CITY_0, city AS CITY_1, city AS CITY_2, city AS CITY_3, flight, flight_stop AS FLIGHT_STOP_0, flight_stop AS FLIGHT_STOP_1 WHERE ((CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'LOS ANGELES' AND FLIGHT_STOP_0.stop_airport = AIRPORT_SERVICE_2.airport_code AND flight.flight_id = FLIGHT_STOP_0.flight_id) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'CHARLOTTE' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'NEWARK' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what nonstop flights between ATLANTA and WASHINGTON leave ATLANTA after 1800 o'clock pm\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'WASHINGTON' AND flight.departure_time > 1800 AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ATLANTA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.stops = 0",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i'd like to find the least expensive one way fare from BOSTON to PHILADELPHIA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT fare.fare_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, fare, flight, flight_fare WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PHILADELPHIA' AND fare.one_direction_cost = (SELECT MIN(FAREalias1.one_direction_cost) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, fare AS FAREalias1, flight AS FLIGHTalias1, flight_fare AS FLIGHT_FAREalias1 WHERE CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'BOSTON' AND CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'PHILADELPHIA' AND FAREalias1.round_trip_required = 'NO' AND FLIGHT_FAREalias1.fare_id = FAREalias1.fare_id AND FLIGHTalias1.flight_id = FLIGHT_FAREalias1.flight_id AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code) AND fare.round_trip_required = 'NO' AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What 's the name of the department with Honors Anthropology ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT department FROM course WHERE name LIKE '%Honors Anthropology%'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- please show me flights from PITTSBURGH to ATLANTA on wednesday morning serving BREAKFAST\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight, food_service WHERE (((date_day.day_number = 23 AND date_day.month_number = 4 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND food_service.meal_code = flight.meal_code AND food_service.meal_description = 'BREAKFAST') AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PITTSBURGH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.departure_time BETWEEN 0 AND 1200",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show flights between TORONTO and SAN FRANCISCO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'TORONTO' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Donald Elmazi citation count\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT COUNT(cite.citedpaperid) FROM author, cite, paper, writes WHERE author.authorname = 'Donald Elmazi' AND paper.paperid = cite.citedpaperid AND writes.authorid = author.authorid AND writes.paperid = paper.paperid",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- please list the flights from PHILADELPHIA to TORONTO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PHILADELPHIA' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'TORONTO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Dr. Galina Grom , what classes has he taught in the past ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number FROM course, course_offering, instructor, offering_instructor WHERE course_offering.semester < (SELECT SEMESTERalias0.semester_id FROM semester AS SEMESTERalias0 WHERE SEMESTERalias0.semester = 'WN' AND SEMESTERalias0.year = 2016) AND course.course_id = course_offering.course_id AND instructor.name LIKE '%Galina Grom%' AND offering_instructor.instructor_id = instructor.instructor_id AND offering_instructor.offering_id = course_offering.offering_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- please list the flights for me that leave DALLAS on tuesday morning and arrive in ATLANTA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND date_day.day_number = 22 AND date_day.month_number = 3 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DALLAS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.departure_time BETWEEN 0 AND 1200",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What venues are for Neuroscience ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT venueid FROM venue WHERE venuename = 'Neuroscience'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What courses offered in Fall or Winter meet the MDE requirement ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, semester.semester FROM course INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN semester ON semester.semester_id = course_offering.semester INNER JOIN program_course ON program_course.course_id = course_offering.course_id WHERE program_course.category LIKE '%MDE%' AND semester.semester IN ('FA', 'WN') AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i would like to see the flights from DENVER to PHILADELPHIA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PHILADELPHIA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i'd like to arrange a flight from PITTSBURGH to ATLANTA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PITTSBURGH' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what 's the capacity of an F28\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT aircraft_code FROM aircraft WHERE basic_type = 'F28'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Next semester , will STDABRD 368 be available ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(*) > 0 FROM course, course_offering, semester WHERE course.course_id = course_offering.course_id AND course.department = 'STDABRD' AND course.number = 368 AND semester.semester = 'FA' AND semester.semester_id = course_offering.semester AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Who is the instructor for course MATSCIE 360 ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT instructor.name FROM course, course_offering, instructor, offering_instructor WHERE course.course_id = course_offering.course_id AND course.department = 'MATSCIE' AND course.number = 360 AND offering_instructor.instructor_id = instructor.instructor_id AND offering_instructor.offering_id = course_offering.offering_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Which courses in LATIN can be taken for 3 credits ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT name, number FROM course WHERE department = 'LATIN' AND credits = 3",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the cheapest fare from WASHINGTON to SAN FRANCISCO leaving on 9 30\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT fare.fare_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day AS DATE_DAY_0, date_day AS DATE_DAY_1, days AS DAYS_0, days AS DAYS_1, fare, fare_basis, flight, flight_fare WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND DATE_DAY_1.day_number = 30 AND DATE_DAY_1.month_number = 9 AND DATE_DAY_1.year = 1991 AND DAYS_1.day_name = DATE_DAY_1.day_name AND flight.flight_days = DAYS_1.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'WASHINGTON' AND DATE_DAY_0.day_number = 30 AND DATE_DAY_0.month_number = 9 AND DATE_DAY_0.year = 1991 AND DAYS_0.day_name = DATE_DAY_0.day_name AND fare_basis.basis_days = DAYS_0.days_code AND fare.fare_basis_code = fare_basis.fare_basis_code AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND fare.one_direction_cost = (SELECT MIN(FAREalias1.one_direction_cost) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, date_day AS DATE_DAYalias2, date_day AS DATE_DAYalias3, days AS DAYSalias2, days AS DAYSalias3, fare AS FAREalias1, fare_basis AS FARE_BASISalias1, flight AS FLIGHTalias1, flight_fare AS FLIGHT_FAREalias1 WHERE (CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'SAN FRANCISCO' AND DATE_DAYalias3.day_number = 30 AND DATE_DAYalias3.month_number = 9 AND DATE_DAYalias3.year = 1991 AND DAYSalias3.day_name = DATE_DAYalias3.day_name AND FLIGHTalias1.flight_days = DAYSalias3.days_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code) AND CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'WASHINGTON' AND DATE_DAYalias2.day_number = 30 AND DATE_DAYalias2.month_number = 9 AND DATE_DAYalias2.year = 1991 AND DAYSalias2.day_name = DATE_DAYalias2.day_name AND FARE_BASISalias1.basis_days = DAYSalias2.days_code AND FAREalias1.fare_basis_code = FARE_BASISalias1.fare_basis_code AND FLIGHT_FAREalias1.fare_id = FAREalias1.fare_id AND FLIGHTalias1.flight_id = FLIGHT_FAREalias1.flight_id AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Which class would be the easiest class for me to take to meet the ULCS requirement ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, program_course.workload, program_course.workload FROM course, program_course WHERE program_course.category LIKE '%ULCS%' AND program_course.course_id = course.course_id AND program_course.workload = (SELECT MIN(PROGRAM_COURSEalias1.workload) FROM program_course AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.category LIKE '%ULCS%')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are all flights from BOSTON to DENVER\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DENVER' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i would like to see the DAILY flights from BALTIMORE to PHILADELPHIA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BALTIMORE' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PHILADELPHIA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND flight.flight_days = 'DAILY'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- how long does it take to fly from BOSTON to ATLANTA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.time_elapsed FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'ATLANTA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i need a return flight from CHICAGO to KANSAS CITY leaving CHICAGO around 7 in the evening next thursday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (((flight.departure_time BETWEEN 1930 AND 1830) AND date_day.day_number = 24 AND date_day.month_number = 5 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'KANSAS CITY' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'CHICAGO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE field (\nfieldid\n)\n\nCREATE TABLE cite (\ncitingpaperid,\ncitedpaperid\n)\n\nCREATE TABLE keyphrase (\nkeyphraseid,\nkeyphrasename\n)\n\nCREATE TABLE paperfield (\nfieldid,\npaperid\n)\n\nCREATE TABLE venue (\nvenueid,\nvenuename\n)\n\nCREATE TABLE paperdataset (\npaperid,\ndatasetid\n)\n\nCREATE TABLE author (\nauthorid,\nauthorname\n)\n\nCREATE TABLE journal (\njournalid,\njournalname\n)\n\nCREATE TABLE paper (\npaperid,\ntitle,\nvenueid,\nyear,\nnumciting,\nnumcitedby,\njournalid\n)\n\nCREATE TABLE writes (\npaperid,\nauthorid\n)\n\nCREATE TABLE paperkeyphrase (\npaperid,\nkeyphraseid\n)\n\nCREATE TABLE dataset (\ndatasetid,\ndatasetname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are popular datasets used in structured prediction\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT COUNT(1), dataset.datasetid FROM dataset, keyphrase, paperdataset, paperkeyphrase WHERE keyphrase.keyphrasename = 'structured prediction' AND paperdataset.datasetid = dataset.datasetid AND paperkeyphrase.keyphraseid = keyphrase.keyphraseid AND paperkeyphrase.paperid = paperdataset.paperid GROUP BY dataset.datasetid ORDER BY COUNT(1) DESC",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i want to see the cheapest flight from DENVER to PITTSBURGH\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, fare, flight, flight_fare WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'PITTSBURGH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND fare.one_direction_cost = (SELECT MIN(FAREalias1.one_direction_cost) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, fare AS FAREalias1, flight AS FLIGHTalias1, flight_fare AS FLIGHT_FAREalias1 WHERE CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'DENVER' AND CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'PITTSBURGH' AND FLIGHT_FAREalias1.fare_id = FAREalias1.fare_id AND FLIGHTalias1.flight_id = FLIGHT_FAREalias1.flight_id AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code) AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me flights from SEATTLE to SAN FRANCISCO that leave after 1700\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.departure_time > 1700 AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'SEATTLE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- list the cheapest one way flight from MIAMI FLORIDA to CHARLOTTE NORTH CAROLINA\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, fare, flight, flight_fare, state AS STATE_0, state AS STATE_1 WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'MIAMI' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'CHARLOTTE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code AND STATE_0.state_code = CITY_0.state_code AND STATE_0.state_name = 'FLORIDA' AND STATE_1.state_code = CITY_1.state_code AND STATE_1.state_name = 'NORTH CAROLINA') AND fare.one_direction_cost = (SELECT MIN(FAREalias1.one_direction_cost) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, fare AS FAREalias1, flight AS FLIGHTalias1, flight_fare AS FLIGHT_FAREalias1, state AS STATEalias2, state AS STATEalias3 WHERE CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'MIAMI' AND CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'CHARLOTTE' AND FAREalias1.round_trip_required = 'NO' AND FLIGHT_FAREalias1.fare_id = FAREalias1.fare_id AND FLIGHTalias1.flight_id = FLIGHT_FAREalias1.flight_id AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code AND STATEalias2.state_code = CITYalias2.state_code AND STATEalias2.state_name = 'FLORIDA' AND STATEalias3.state_code = CITYalias3.state_code AND STATEalias3.state_name = 'NORTH CAROLINA') AND fare.round_trip_required = 'NO' AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what states border montana\nSELECT",
      "input": "",
      "output": "SELECT border FROM border_info WHERE state_name = 'montana'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i would like to fly from ATLANTA to SAN FRANCISCO with a stopover in DALLAS\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, city AS CITY_0, city AS CITY_1, city AS CITY_2, flight, flight_stop WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'DALLAS' AND flight_stop.stop_airport = AIRPORT_SERVICE_2.airport_code AND flight.flight_id = flight_stop.flight_id AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ATLANTA' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE keyword (\nkeyword,\nkid\n)\n\nCREATE TABLE domain_author (\naid,\ndid\n)\n\nCREATE TABLE author (\naid,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE domain_publication (\ndid,\npid\n)\n\nCREATE TABLE domain_conference (\ncid,\ndid\n)\n\nCREATE TABLE writes (\naid,\npid\n)\n\nCREATE TABLE domain_journal (\ndid,\njid\n)\n\nCREATE TABLE publication_keyword (\nkid,\npid\n)\n\nCREATE TABLE organization (\ncontinent,\nhomepage,\nname,\noid\n)\n\nCREATE TABLE domain (\ndid,\nname\n)\n\nCREATE TABLE publication (\nabstract,\ncid,\ncitation_num,\njid,\npid,\nreference_num,\ntitle,\nyear\n)\n\nCREATE TABLE conference (\ncid,\nhomepage,\nname\n)\n\nCREATE TABLE journal (\nhomepage,\njid,\nname\n)\n\nCREATE TABLE domain_keyword (\ndid,\nkid\n)\n\nCREATE TABLE cite (\ncited,\nciting\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- return me the journals, which have more than 60 papers containing keyword ' Relational Database ' .\nSELECT",
      "input": "",
      "output": "SELECT journal.name FROM journal, keyword, publication, publication_keyword WHERE keyword.keyword = 'Relational Database' AND publication_keyword.kid = keyword.kid AND publication.jid = journal.jid AND publication.pid = publication_keyword.pid GROUP BY journal.name HAVING COUNT(DISTINCT (publication.title)) > 60",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Is GREEK 441 section 825 provided in the Winter 2007 semester ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(*) > 0 FROM course INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN semester ON semester.semester_id = course_offering.semester WHERE course_offering.section_number = 825 AND course.department = 'GREEK' AND course.number = 441 AND semester.semester = 'Winter' AND semester.year = 2007",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- get SATURDAY fares from WASHINGTON to TORONTO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT fare.fare_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, days AS DAYS_0, days AS DAYS_1, fare, fare_basis, flight, flight_fare WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'TORONTO' AND DAYS_1.day_name = 'SATURDAY' AND flight.flight_days = DAYS_1.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'WASHINGTON' AND DAYS_0.day_name = 'SATURDAY' AND fare_basis.basis_days = DAYS_0.days_code AND fare.fare_basis_code = fare_basis.fare_basis_code AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Who is responsible for teaching intelligent systems courses ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT instructor.name FROM instructor INNER JOIN offering_instructor ON offering_instructor.instructor_id = instructor.instructor_id INNER JOIN course_offering ON offering_instructor.offering_id = course_offering.offering_id INNER JOIN area ON course_offering.course_id = area.course_id WHERE area.area LIKE '%intelligent systems%'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\nCREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what is the biggest city in the us\nSELECT",
      "input": "",
      "output": "SELECT city_name FROM city WHERE population = (SELECT MAX(CITYalias1.population) FROM city AS CITYalias1)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- do you have a UA flight from BOSTON to WASHINGTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'WASHINGTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND flight.to_airport = AIRPORT_SERVICE_0.airport_code AND flight.from_airport = AIRPORT_SERVICE_1.airport_code) AND flight.airline_code = 'UA'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i want a flight on TW from BOSTON to DENVER\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND flight.to_airport = AIRPORT_SERVICE_0.airport_code AND flight.from_airport = AIRPORT_SERVICE_1.airport_code) AND flight.airline_code = 'TW'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i'd like to fly from BOSTON to SAN FRANCISCO could you find me the cheapest fare\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT fare.fare_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, fare, flight, flight_fare WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BOSTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND fare.one_direction_cost = (SELECT MIN(FAREalias1.one_direction_cost) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, fare AS FAREalias1, flight AS FLIGHTalias1, flight_fare AS FLIGHT_FAREalias1 WHERE CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'BOSTON' AND CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'SAN FRANCISCO' AND FLIGHT_FAREalias1.fare_id = FAREalias1.fare_id AND FLIGHTalias1.flight_id = FLIGHT_FAREalias1.flight_id AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code) AND flight_fare.fare_id = fare.fare_id AND flight.flight_id = flight_fare.flight_id AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- In order to declare a major in ANTHRCUL , what classes must I take ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number FROM course, program_course WHERE course.department LIKE '%ANTHRCUL%' AND program_course.category LIKE 'PreMajor' AND program_course.course_id = course.course_id",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what time are flights from DENVER to SAN FRANCISCO on CO\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.departure_time FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'DENVER' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND flight.airline_code = 'CO'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- flights from MIAMI to CLEVELAND\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'MIAMI' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'CLEVELAND' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- display all flights from BALTIMORE to BOSTON on 7 29\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BOSTON' AND date_day.day_number = 29 AND date_day.month_number = 7 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'BALTIMORE' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE review (\nrid,\nbusiness_id,\nuser_id,\nrating,\ntext,\nyear,\nmonth\n)\n\nCREATE TABLE neighborhood (\nid,\nbusiness_id,\nneighborhood_name\n)\n\nCREATE TABLE business (\nbid,\nbusiness_id,\nname,\nfull_address,\ncity,\nlatitude,\nlongitude,\nreview_count,\nis_open,\nrating,\nstate\n)\n\nCREATE TABLE user (\nuid,\nuser_id,\nname\n)\n\nCREATE TABLE tip (\ntip_id,\nbusiness_id,\ntext,\nuser_id,\nlikes,\nyear,\nmonth\n)\n\nCREATE TABLE checkin (\ncid,\nbusiness_id,\ncount,\nday\n)\n\nCREATE TABLE category (\nid,\nbusiness_id,\ncategory_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- List all the Italian restaurant in ' Los Angeles\nSELECT",
      "input": "",
      "output": "SELECT business.name FROM business, category AS CATEGORY_0, category AS CATEGORY_1 WHERE business.city = 'Los Angeles' AND CATEGORY_0.business_id = business.business_id AND CATEGORY_0.category_name = 'Italian' AND CATEGORY_1.business_id = business.business_id AND CATEGORY_1.category_name = 'restaurant'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the flights from CLEVELAND to INDIANAPOLIS for wednesday the 12 of 4\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'INDIANAPOLIS' AND date_day.day_number = 12 AND date_day.month_number = 4 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'CLEVELAND' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the flights from ORLANDO to CLEVELAND on US that arrive around 10pm\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE (((flight.arrival_time <= 2230 AND flight.arrival_time >= 2130) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'CLEVELAND' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ORLANDO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.airline_code = 'US'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the flights which depart from SAN FRANCISCO fly to WASHINGTON via INDIANAPOLIS and arrive by 2100\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, airport_service AS AIRPORT_SERVICE_2, city AS CITY_0, city AS CITY_1, city AS CITY_2, flight, flight_stop WHERE ((CITY_2.city_code = AIRPORT_SERVICE_2.city_code AND CITY_2.city_name = 'INDIANAPOLIS' AND flight_stop.stop_airport = AIRPORT_SERVICE_2.airport_code AND flight.arrival_time <= 2100 AND flight.flight_id = flight_stop.flight_id) AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'WASHINGTON' AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'SAN FRANCISCO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me flights between MEMPHIS and LAS VEGAS on sunday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'LAS VEGAS' AND date_day.day_number = 27 AND date_day.month_number = 8 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'MEMPHIS' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what are the flights between PITTSBURGH and BALTIMORE on 8 10\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE (CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'BALTIMORE' AND date_day.day_number = 10 AND date_day.month_number = 8 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'PITTSBURGH' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me the flights from SAN FRANCISCO to WASHINGTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'SAN FRANCISCO' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'WASHINGTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- show me flights from ATLANTA to WASHINGTON\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, flight WHERE CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'ATLANTA' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'WASHINGTON' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- When will Sarah Mcdowell teach 763 next ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT semester.semester, semester.year FROM course, course_offering, instructor, offering_instructor, semester WHERE course.course_id = course_offering.course_id AND course.number = 763 AND course_offering.semester = semester.semester_id AND instructor.name LIKE '%Sarah Mcdowell%' AND offering_instructor.instructor_id = instructor.instructor_id AND offering_instructor.offering_id = course_offering.offering_id AND semester.semester_id > (SELECT SEMESTERalias1.semester_id FROM semester AS SEMESTERalias1 WHERE SEMESTERalias1.semester = 'WN' AND SEMESTERalias1.year = 2016) ORDER BY semester.semester_id LIMIT 1",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Are there 16 -credit LATINOAM courses ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT name, number FROM course WHERE department = 'LATINOAM' AND credits = 16",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What classes are least demanding , while as yet satisfying the PreMajor necessity ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number, program_course.workload, program_course.workload FROM course, program_course WHERE program_course.category LIKE '%PreMajor%' AND program_course.course_id = course.course_id AND program_course.workload = (SELECT MIN(PROGRAM_COURSEalias1.workload) FROM program_course AS PROGRAM_COURSEalias1 WHERE PROGRAM_COURSEalias1.category LIKE '%PreMajor%')",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- How many professors will be teaching ROMLANG 500 in the Spring of 2020 ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT instructor.instructor_id) FROM course, course_offering, instructor, offering_instructor, semester WHERE course.course_id = course_offering.course_id AND course.department = 'ROMLANG' AND course.number = 500 AND offering_instructor.instructor_id = instructor.instructor_id AND offering_instructor.offering_id = course_offering.offering_id AND semester.semester = 'Spring' AND semester.semester_id = course_offering.semester AND semester.year = 2020",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE border_info (\nstate_name,\nborder\n)\n\nCREATE TABLE river (\nriver_name,\nlength,\ntraverse,\ncountry_name\n)\n\nCREATE TABLE city (\ncity_name,\nstate_name,\npopulation,\ncountry_name\n)\n\nCREATE TABLE road (\nroad_name,\nstate_name\n)\n\nCREATE TABLE lake (\nlake_name,\narea,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE highlow (\nstate_name,\nhighest_point,\nhighest_elevation,\nlowest_point,\nlowest_elevation\n)\n\nCREATE TABLE mountain (\nmountain_name,\nmountain_altitude,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE state (\nstate_name,\ncapital,\npopulation,\narea,\ncountry_name,\ndensity\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- how many major rivers cross ohio\nSELECT",
      "input": "",
      "output": "SELECT COUNT(river_name) FROM river WHERE length > 750 AND traverse = 'ohio'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- what kind of airplanes are used by DL flying between WASHINGTON and DENVER\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT aircraft.aircraft_code FROM aircraft, airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, equipment_sequence, flight WHERE (CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'WASHINGTON' AND CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'DENVER' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND equipment_sequence.aircraft_code = aircraft.aircraft_code AND flight.aircraft_code_sequence = equipment_sequence.aircraft_code_sequence AND flight.airline_code = 'DL'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- What amount of upper level classes have labs ?\nSELECT",
      "input": "",
      "output": "SELECT COUNT(DISTINCT course.course_id) FROM course INNER JOIN program_course ON program_course.course_id = course.course_id WHERE course.has_lab = 'Y' AND program_course.category LIKE '%ULCS%'",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE class_of_service (\nbooking_class,\nrank,\nclass_description\n)\n\nCREATE TABLE airline (\nairline_code,\nairline_name,\nnote\n)\n\nCREATE TABLE date_day (\nmonth_number,\nday_number,\nyear,\nday_name\n)\n\nCREATE TABLE time_interval (\nperiod,\nbegin_time,\nend_time\n)\n\nCREATE TABLE fare_basis (\nfare_basis_code,\nbooking_class,\nclass_type,\npremium,\neconomy,\ndiscounted,\nnight,\nseason,\nbasis_days\n)\n\nCREATE TABLE fare (\nfare_id,\nfrom_airport,\nto_airport,\nfare_basis_code,\nfare_airline,\nrestriction_code,\none_direction_cost,\nround_trip_cost,\nround_trip_required\n)\n\nCREATE TABLE airport (\nairport_code,\nairport_name,\nairport_location,\nstate_code,\ncountry_name,\ntime_zone_code,\nminimum_connect_time\n)\n\nCREATE TABLE dual_carrier (\nmain_airline,\nlow_flight_number,\nhigh_flight_number,\ndual_airline,\nservice_name\n)\n\nCREATE TABLE flight (\naircraft_code_sequence,\nairline_code,\nairline_flight,\narrival_time,\nconnections,\ndeparture_time,\ndual_carrier,\nflight_days,\nflight_id,\nflight_number,\nfrom_airport,\nmeal_code,\nstops,\ntime_elapsed,\nto_airport\n)\n\nCREATE TABLE code_description (\ncode,\ndescription\n)\n\nCREATE TABLE city (\ncity_code,\ncity_name,\nstate_code,\ncountry_name,\ntime_zone_code\n)\n\nCREATE TABLE ground_service (\ncity_code,\nairport_code,\ntransport_type,\nground_fare\n)\n\nCREATE TABLE restriction (\nrestriction_code,\nadvance_purchase,\nstopovers,\nsaturday_stay_required,\nminimum_stay,\nmaximum_stay,\napplication,\nno_discounts\n)\n\nCREATE TABLE month (\nmonth_number,\nmonth_name\n)\n\nCREATE TABLE days (\ndays_code,\nday_name\n)\n\nCREATE TABLE flight_fare (\nflight_id,\nfare_id\n)\n\nCREATE TABLE state (\nstate_code,\nstate_name,\ncountry_name\n)\n\nCREATE TABLE flight_stop (\nflight_id,\nstop_number,\nstop_days,\nstop_airport,\narrival_time,\narrival_airline,\narrival_flight_number,\ndeparture_time,\ndeparture_airline,\ndeparture_flight_number,\nstop_time\n)\n\nCREATE TABLE compartment_class (\ncompartment,\nclass_type\n)\n\nCREATE TABLE time_zone (\ntime_zone_code,\ntime_zone_name,\nhours_from_gmt\n)\n\nCREATE TABLE equipment_sequence (\naircraft_code_sequence,\naircraft_code\n)\n\nCREATE TABLE food_service (\nmeal_code,\nmeal_number,\ncompartment,\nmeal_description\n)\n\nCREATE TABLE airport_service (\ncity_code,\nairport_code,\nmiles_distant,\ndirection,\nminutes_distant\n)\n\nCREATE TABLE flight_leg (\nflight_id,\nleg_number,\nleg_flight\n)\n\nCREATE TABLE aircraft (\naircraft_code,\naircraft_description,\nmanufacturer,\nbasic_type,\nengines,\npropulsion,\nwide_body,\nwing_span,\nlength,\nweight,\ncapacity,\npay_load,\ncruising_speed,\nrange_miles,\npressurized\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- i would like the first flight from TORONTO to MONTREAL next friday\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT flight.flight_id FROM airport_service AS AIRPORT_SERVICE_0, airport_service AS AIRPORT_SERVICE_1, city AS CITY_0, city AS CITY_1, date_day, days, flight WHERE ((CITY_1.city_code = AIRPORT_SERVICE_1.city_code AND CITY_1.city_name = 'MONTREAL' AND date_day.day_number = 25 AND date_day.month_number = 6 AND date_day.year = 1991 AND days.day_name = date_day.day_name AND flight.flight_days = days.days_code AND flight.to_airport = AIRPORT_SERVICE_1.airport_code) AND CITY_0.city_code = AIRPORT_SERVICE_0.city_code AND CITY_0.city_name = 'TORONTO' AND flight.from_airport = AIRPORT_SERVICE_0.airport_code) AND flight.departure_time = (SELECT MIN(FLIGHTalias1.departure_time) FROM airport_service AS AIRPORT_SERVICEalias2, airport_service AS AIRPORT_SERVICEalias3, city AS CITYalias2, city AS CITYalias3, date_day AS DATE_DAYalias1, days AS DAYSalias1, flight AS FLIGHTalias1 WHERE (CITYalias3.city_code = AIRPORT_SERVICEalias3.city_code AND CITYalias3.city_name = 'MONTREAL' AND DATE_DAYalias1.day_number = 25 AND DATE_DAYalias1.month_number = 6 AND DATE_DAYalias1.year = 1991 AND DAYSalias1.day_name = DATE_DAYalias1.day_name AND FLIGHTalias1.flight_days = DAYSalias1.days_code AND FLIGHTalias1.to_airport = AIRPORT_SERVICEalias3.airport_code) AND CITYalias2.city_code = AIRPORT_SERVICEalias2.city_code AND CITYalias2.city_name = 'TORONTO' AND FLIGHTalias1.from_airport = AIRPORT_SERVICEalias2.airport_code)",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- For a CS major , what classes are available this Winter that would count towards that ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number FROM course, course_offering, program, program_course, semester WHERE program_course.course_id = course.course_id AND program_course.course_id = course.course_id AND program.name LIKE '%CS%' AND program.program_id = program_course.program_id AND semester.semester = 'Winter' AND semester.semester_id = course_offering.semester AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Can you tell me who the GSIs were for last semester 's SEAS 698 ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT student.firstname, student.lastname FROM course INNER JOIN course_offering ON course.course_id = course_offering.course_id INNER JOIN gsi ON gsi.course_offering_id = course_offering.offering_id INNER JOIN student ON student.student_id = gsi.student_id INNER JOIN semester ON semester.semester_id = course_offering.semester WHERE course.department = 'SEAS' AND course.number = 698 AND semester.semester = 'FA' AND semester.year = 2015",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- Which MDE classes can be taken next semester ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT course.department, course.name, course.number FROM course, course_offering, program, program_course, semester WHERE course.course_id = course_offering.course_id AND program_course.category LIKE '%MDE%' AND program_course.course_id = course.course_id AND program.name LIKE '%CS-LSA%' AND program.program_id = program_course.program_id AND semester.semester = 'FA' AND semester.semester_id = course_offering.semester AND semester.year = 2016",
      "history": []
    },
    {
      "db_id": "database",
      "instruction": "CREATE TABLE program_course (\nprogram_id,\ncourse_id,\nworkload,\ncategory\n)\n\nCREATE TABLE area (\ncourse_id,\narea\n)\n\nCREATE TABLE jobs (\njob_id,\njob_title,\ndescription,\nrequirement,\ncity,\nstate,\ncountry,\nzip\n)\n\nCREATE TABLE semester (\nsemester_id,\nsemester,\nyear\n)\n\nCREATE TABLE requirement (\nrequirement_id,\nrequirement,\ncollege\n)\n\nCREATE TABLE instructor (\ninstructor_id,\nname,\nuniqname\n)\n\nCREATE TABLE course_prerequisite (\npre_course_id,\ncourse_id\n)\n\nCREATE TABLE offering_instructor (\noffering_instructor_id,\noffering_id,\ninstructor_id\n)\n\nCREATE TABLE comment_instructor (\ninstructor_id,\nstudent_id,\nscore,\ncomment_text\n)\n\nCREATE TABLE program (\nprogram_id,\nname,\ncollege,\nintroduction\n)\n\nCREATE TABLE program_requirement (\nprogram_id,\ncategory,\nmin_credit,\nadditional_req\n)\n\nCREATE TABLE course_offering (\noffering_id,\ncourse_id,\nsemester,\nsection_number,\nstart_time,\nend_time,\nmonday,\ntuesday,\nwednesday,\nthursday,\nfriday,\nsaturday,\nsunday,\nhas_final_project,\nhas_final_exam,\ntextbook,\nclass_address,\nallow_audit\n)\n\nCREATE TABLE student (\nstudent_id,\nlastname,\nfirstname,\nprogram_id,\ndeclare_major,\ntotal_credit,\ntotal_gpa,\nentered_as,\nadmit_term,\npredicted_graduation_semester,\ndegree,\nminor,\ninternship\n)\n\nCREATE TABLE gsi (\ncourse_offering_id,\nstudent_id\n)\n\nCREATE TABLE ta (\ncampus_job_id,\nstudent_id,\nlocation\n)\n\nCREATE TABLE student_record (\nstudent_id,\ncourse_id,\nsemester,\ngrade,\nhow,\ntransfer_source,\nearn_credit,\nrepeat_term,\ntest_id\n)\n\nCREATE TABLE course_tags_count (\ncourse_id,\nclear_grading,\npop_quiz,\ngroup_projects,\ninspirational,\nlong_lectures,\nextra_credit,\nfew_tests,\ngood_feedback,\ntough_tests,\nheavy_papers,\ncares_for_students,\nheavy_assignments,\nrespected,\nparticipation,\nheavy_reading,\ntough_grader,\nhilarious,\nwould_take_again,\ngood_lecture,\nno_skip\n)\n\nCREATE TABLE course (\ncourse_id,\nname,\ndepartment,\nnumber,\ncredits,\nadvisory_requirement,\nenforced_requirement,\ndescription,\nnum_semesters,\nnum_enrolled,\nhas_discussion,\nhas_lab,\nhas_projects,\nhas_exams,\nnum_reviews,\nclarity_score,\neasiness_score,\nhelpfulness_score\n)\n\n\n-- Using valid SQLite, answer the following questions for the tables provided above.\n\n-- How many people are in 477 ?\nSELECT",
      "input": "",
      "output": "SELECT DISTINCT num_enrolled FROM course WHERE department = 'EECS' AND number = 477",
      "history": []
    }
]